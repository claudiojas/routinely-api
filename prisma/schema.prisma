// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id @default(uuid())
  name        String
  email       String   @unique
  password    String? // Agora opcional para login social
  avatar      String?  // URL da imagem de perfil
  preferences Json?    // Preferências do usuário (JSON)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  activities  Activity[]
  weeks       Week[]
  // Campos para login social Google
  googleId            String?   @unique
  googleAccessToken   String?
  googleRefreshToken  String?
}

model Activity {
  id          String   @id @default(uuid())
  userId      String
  title       String
  description String?
  type        ActivityType
  startTime   String
  endTime     String
  date        String // formato YYYY-MM-DD
  completed   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Week {
  id           String   @id @default(uuid())
  userId       String
  startDate    DateTime
  endDate      DateTime
  isActive     Boolean  @default(true)
  isCompleted  Boolean  @default(false)
  weekNumber   Int
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  completedAt  DateTime?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  dayComments DayComment[]
}

model DayComment {
  id        String   @id @default(uuid())
  weekId    String
  dayOfWeek Int      // 0=Domingo, 1=Segunda, ..., 6=Sábado
  comment   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  week Week @relation(fields: [weekId], references: [id], onDelete: Cascade)

  @@unique([weekId, dayOfWeek]) // Garante 1 comentário por dia/semana
}

enum ActivityType {
  PESSOAL
  TRABALHO
  ESTUDO
  SAUDE
  OUTRO
}
